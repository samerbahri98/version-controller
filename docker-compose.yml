version: "3.3"

services:
  # git
  git:
    build: ./DockerImages/git/
    image: git
    container_name: git
    hostname: git-ssh-server
    restart: unless-stopped
    ports:
      - "80:80"
      - "22:22"
    networks:
      - app-network
    volumes:
      - ./git/vol/:/var/git
  # queue:
  #   image: "redis:alpine"
  #   container_name: queue
  #   volumes:
  #     - ./data/queue:/data
  #   networks:
  #     - app-network
  #   ports:
  #     - 6379:6379
  # worker-queue:
  #   build: ./DockerImages/node/
  #   image: node
  #   env_file:
  #     - .env
  #   restart: always
  #   container_name: worker-queue
  #   volumes:
  #     - ./worker-queue:/var/www/app
  #   networks:
  #     - app-network
  #   environment:
  #     # - NODE_ENV=development
  #     # - REDIS_URL=queue
  #     # - REDIS_PORT=6379
  #     # - GIT_CONTAINER=git
  #     - PORT=3000
  #   links:
  #     - queue
  #   depends_on:
  #     - queue
  #   ports:
  #     - "3000:3000"
  #   command: sh -c 'npm install && npm run compile && npm run start'

  client:
    build: ./DockerImages/react/
    image: react
    env_file:
      - .env
    restart: always
    container_name: client
    volumes:
      - ./client:/var/www/app
    networks:
      - app-network
    environment:
      # - NODE_ENV=development
      # - REDIS_URL=queue
      # - REDIS_PORT=6379
      # - GIT_CONTAINER=git
      - PORT=3000
    links:
      - api
    depends_on:
      - "api"
    ports:
      - "3000:3000"
    command: sh -c 'npm install && npm start'

    
  db:
    image: postgres
    env_file:
      - .env
    container_name: db
    restart: always
    volumes:
      - ./setup/db:/setup
      - ./data/pg:/var/lib/postgresql/data
    networks:
      - app-network
    # environment:
    #   - POSTGRES_PASSWORD=example
    #   - PGDATA=/var/lib/postgresql/data
  # adminer is a  GUI for database, do not use for production
  adminer:
    image: michalhosna/adminer
    container_name: adminer
    networks:
      - app-network
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DB: git
      ADMINER_DRIVER: pgsql
      ADMINER_PASSWORD: example
      ADMINER_SERVER: db
      ADMINER_USERNAME: postgres
      ADMINER_AUTOLOGIN: 1
      ADMINER_NAME: This will be in the title!
    links:
      - db
    depends_on:
      - db
  # redis-commander:
  #  image: rediscommander/redis-commander
  #  container_name: redis-commander
  #  networks:
  #     - app-network
  #  restart: always
  #  links:
  #    - queue
  #  depends_on:
  #    - queue
  #  environment:
  #    - REDIS_HOSTS=queue:6379
  #  ports:
  #    - 8081:8081
  api:
    build: ./DockerImages/node/
    env_file:
      - .env
    image: node
    restart: always
    container_name: api
    volumes:
      - ./api:/var/www/app
      - ./git/vol/:/var/git
    networks:
      - app-network
    environment:
      - PORT=1337
      - ACCESS_TOKEN_SECRET="ACCESS_TOKEN_SECRET"
      - REFRESH_TOKEN_SECRET="REFRESH_TOKEN_SECRET"
    # links:
    #   - queue
    # depends_on:
    #   - queue
    ports:
      - "1337:1337"
    command: sh -c 'npm install && npm run compile && npm run start'

networks:
  app-network:
    driver: bridge

volumes:
  git-storage:
  git-data:
