version: "3.8"

services:
  db:
    image: postgres:14
    env_file:
      - .env
    container_name: db
    restart: always
    volumes:
      - ./initializer/db:/setup
      - ./data/pg:/var/lib/postgresql/data
      - ./initializer/db/db.sh:/docker-entrypoint-initdb.d/db.sh
    networks:
      - app-network

  # adminer is a  GUI for database, do not use for production
  adminer:
    image: michalhosna/adminer
    container_name: adminer
    networks:
      - app-network
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DB: git
      ADMINER_DRIVER: pgsql
      ADMINER_PASSWORD: example
      ADMINER_SERVER: db
      ADMINER_USERNAME: postgres
      ADMINER_AUTOLOGIN: 1
      ADMINER_NAME: This will be in the title!
    links:
      - db
    depends_on:
      - db


  # initializer:
  #   build: ./initializer
  #   links:
  #     - db
  #     - git-ssh-server
  #   depends_on:
  #     - db
  #     - git-ssh-server
  #   networks:
  #     - app-network
  #   container_name: initializer
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   env_file:
  #     - .env
      
  git-ssh-server:
    build: ./git-ssh-server
    container_name: git-ssh-server
    restart: unless-stopped
    ports:
      - "80:80"
      - "22:22"
    networks:
      - app-network
    volumes:
      - ./git-volume:/var/git
  # api:
  #   build: ./api
  #   container_name: api
  #   restart: unless-stopped
  #   ports:
  #     - "1337:1337"
  #   networks:
  #     - app-network
  #   env_file:
  #     - .env
  #   environment:
  #     - PORT=1337
  #     - ACCESS_TOKEN_SECRET="ACCESS_TOKEN_SECRET"
  #     - REFRESH_TOKEN_SECRET="REFRESH_TOKEN_SECRET"
  api:
    build: ./DockerImages/node/
    env_file:
      - .env
    image: node
    restart: always
    container_name: api
    volumes:
      - ./api:/var/www/app
      - ./git-volume:/var/git

      - /var/run/docker.sock:/var/run/docker.sock
      # - ./git/vol/:/var/git
    networks:
      - app-network
    environment:
      - PORT=1337
      - ACCESS_TOKEN_SECRET="ACCESS_TOKEN_SECRET"
      - REFRESH_TOKEN_SECRET="REFRESH_TOKEN_SECRET"
    ports:
      - "1337:1337"
    # command: sh -c 'npm install && npm run compile && npm run start'
    command: sh -c 'npm install && npm run start:dev'

  client:
    build: ./DockerImages/react
    image: react
    env_file:
      - .env
    restart: always
    container_name: client
    volumes:
      - ./client:/var/www/app
    networks:
      - app-network
    environment:
      - PORT=3000
      - REACT_APP_API_URI=http://localhost:1337/graphql/
    links:
      - api
    depends_on:
      - "api"
    ports:
      - "3000:3000"
    command: sh -c 'npm install && npm start'


networks:
  app-network:
    driver: bridge